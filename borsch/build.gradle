plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.nayax'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	mapstructVersion = "1.3.1.Final"
	mockitoVersion = "3.5.13"
	set('springCloudVersion', "Hoxton.SR8")
	swaggerVersion = "2.9.2"
	springBootVersion = "2.3.4.RELEASE"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	implementation ("org.mapstruct:mapstruct:$mapstructVersion")
	annotationProcessor ("org.mapstruct:mapstruct-processor:$mapstructVersion")
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	implementation ("io.springfox:springfox-swagger-ui:$swaggerVersion")
	implementation ("io.springfox:springfox-spring-web:$swaggerVersion")
	implementation ("com.google.guava:guava:28.2-jre")
	implementation ("io.springfox:springfox-swagger2:$swaggerVersion") {
		exclude group: 'org.mapstruct', module: 'mapstruct'
	}

}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

//jvmargs {
//	file.encoding=UTF-8
//}

tasks.bootRun {
	jvmArgs '-Dfile.encoding=UTF8'
}
